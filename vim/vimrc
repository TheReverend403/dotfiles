set nocompatible

if &shell =~# 'fish$'
    set shell=/bin/bash
endif

" {{{ Plugins
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')

" Automatically install missing plugins on startup
if !empty(filter(copy(g:plugs), '!isdirectory(v:val.dir)'))
  autocmd VimEnter * PlugInstall | q
endif

Plug 'tpope/vim-sensible'
Plug 'tpope/vim-commentary'
Plug 'itchyny/lightline.vim'
Plug 'sheerun/vim-polyglot'
Plug 'editorconfig/editorconfig-vim'
Plug 'joshdick/onedark.vim'

call plug#end()
" }}}

" {{{ Appearance
if (has('nvim'))
    let $NVIM_TUI_ENABLE_TRUE_COLOR=1
endif

if (has('termguicolors'))
    set termguicolors
endif

let g:lightline = {
      \ 'colorscheme': 'onedark',
      \ }

set background=dark
colorscheme onedark

filetype plugin indent on
syntax on
" }}}

set cursorline
set wrapscan
set report=0
set synmaxcol=200

set number
set noshowmode
set showcmd
set nomodeline

set splitbelow
set splitright

set wrapscan
set report=0
set synmaxcol=200

set incsearch
set hlsearch
set smartcase

set ttyfast

set expandtab
set softtabstop=4
set shiftwidth=4
set shiftround

set clipboard=unnamedplus
set pastetoggle=<F3>

" {{{ Put all temporary files under the same directory.
" https://github.com/mhinz/vim-galore#handling-backup-swap-undo-and-viminfo-files
if !isdirectory($HOME.'/.vim/files') && exists('*mkdir')
    call mkdir($HOME.'/.vim/files')
    call mkdir($HOME.'/.vim/files/backup')
    call mkdir($HOME.'/.vim/files/swap')
    call mkdir($HOME.'/.vim/files/undo')
    call mkdir($HOME.'/.vim/files/info')
endif

set backup
set backupdir=$HOME/.vim/files/backup/
set backupext=-vimbackup
set backupskip=
set directory=$HOME/.vim/files/swap/
set updatecount=100
set undofile
set undodir=$HOME/.vim/files/undo/
set viminfo='100,n$HOME/.vim/files/info/viminfo
" }}}

let mapleader = ","
nnoremap <C-Left> <C-w>h
nnoremap <C-Down> <C-w>j
nnoremap <C-Up> <C-w>k
nnoremap <C-Right> <C-w>l

command! -range=% I execute <line1> . "," . <line2> . "w !curl -s -F 'f:1=<-' ix.io | tr -d '\\n'"
